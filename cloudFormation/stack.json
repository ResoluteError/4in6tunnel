{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Setup for a publicly reachable EC2 instance with IPv4 and IPv6 enabled to act as a 4in6 tunnel for devices running on a DS-Lite network. **WARNING** This template creates an Amazon EC2 instance and an Elastic IP Address. You will be billed for the AWS resources used if you create a stack from this template.",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "IPTunnelVPC"
          }
        ]
      }
    },
    "Ipv6VPCCidrBlock": {
      "Type": "AWS::EC2::VPCCidrBlock",
      "Properties": {
        "AmazonProvidedIpv6CidrBlock": true,
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "Subnet": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": [
        "VPC",
        "Ipv6VPCCidrBlock"
      ],
      "Properties": {
        "AssignIpv6AddressOnCreation": "true",
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Fn::Select": [
            0,
            {
              "Fn::Cidr": [
                {
                  "Fn::GetAtt": [
                    "VPC",
                    "CidrBlock"
                  ]
                },
                1,
                4
              ]
            }
          ]
        },
        "Ipv6CidrBlock": {
          "Fn::Select": [
            0,
            {
              "Fn::Cidr": [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::GetAtt": [
                        "VPC",
                        "Ipv6CidrBlocks"
                      ]
                    }
                  ]
                },
                1,
                64
              ]
            }
          ]
        },
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              "a"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "IPTunnelSubnet-1"
          }
        ]
      }
    },
    "mySubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet"
        },
        "RouteTableId": {
          "Ref": "RouteTable"
        }
      }
    },
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": [
        "Subnet",
        "InstanceSecurityGroup"
      ],
      "Properties": {
        "SecurityGroupIds": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "IPAddress=",
                {
                  "Ref": "IPAddress"
                }
              ]
            ]
          }
        },
        "InstanceType": "t2.nano",
        "Ipv6AddressCount": 1,
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": "ami-022e8cc8f0d3c52fd",
        "SubnetId": {
          "Ref": "Subnet"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "IPTunnelEC2"
          }
        ]
      }
    },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "Subnet",
      "Properties": {
        "GroupName": "IPTunnelSG",
        "GroupDescription": "Enable SSH access && ports 80 && 443",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIpv6": "::/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8022",
            "ToPort": "8022",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8022",
            "ToPort": "8022",
            "CidrIpv6": "::/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIpv6": "::/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIpv6": "::/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIpv6": "::/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8081",
            "ToPort": "8081",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8081",
            "ToPort": "8081",
            "CidrIpv6": "::/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8443",
            "ToPort": "8443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8443",
            "ToPort": "8443",
            "CidrIpv6": "::/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "IPTunnelSG"
          }
        ]
      }
    },
    "IPv4Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "InternetGateway",
        "AttachGateway"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "IPv6Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "InternetGateway",
        "AttachGateway"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "DestinationIpv6CidrBlock": "::/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "IPTunnelRoutingTable"
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "IPTunnelIGW"
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "IPAddress": {
      "Type": "AWS::EC2::EIP"
    },
    "IPAssoc": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "InstanceId": {
          "Ref": "EC2Instance"
        },
        "EIP": {
          "Ref": "IPAddress"
        }
      }
    }
  },
  "Outputs": {
    "InstanceId": {
      "Description": "InstanceId of the newly created EC2 instance",
      "Value": {
        "Ref": "EC2Instance"
      }
    },
    "InstanceIPAddress": {
      "Description": "IP address of the newly created EC2 instance",
      "Value": {
        "Ref": "IPAddress"
      }
    }
  }
}